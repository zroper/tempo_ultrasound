; VS_.CFG - VideoSYNC configuration file
;
; Please copy this file to your c:\tempo directory and customize
; the copy in the c:\tempo directory instead of editing this file in
; the c:\tempo\cfg directory.  Future releases may overwrite the
; files in the c:\tempo\cfg directory but your customized copy in
; the c:\tempo directory will not be overwritten.
;
; For example: copy c:\tempo\vdosync\vs_.cfg c:\tempo\vs.cfg
;
; This also renames the copy to VS.CFG.
;
; Note: A semicolon at the beginning of the line indicates the rest of
;       the line is a comment.
;
;--------------------------------------------------------------------------
; Digital i/o base address (MODE parameter)
; 
; The base address for the digital i/o card must be set correctly with
; the MODE parameter before VideoSYNC can communicate with TEMPO. For
; ISA cards, simply specify the base address (prefixed with 0x for
; hexadecimal) for the MODE parameter in your VideoSYNC configuration
; file.
; 
; For CIO-DIO-xx cards (ISA), check your Digital I/O card manual for
; the base address of the 8255 chip you want to use for VideoSYNC. For
; example, on the CIO-DIO-24 the factory setting for the base address
; is MODE=0x300.
; 
; On the PCI-DIO48H (PCI card), there are two 8255 digital i/o chips,
; chip 0 and chip 1.
; By default, the server uses the chip 1 for the RDX (DDX) link
; (e.g., see DDX_BASE in KPCD.CFG file on the server). The syntax for
; specifying the base address of an 8255 chip on a PCI card is:
; 
;     MODE=<pciCardName>,cardNumber,chipNumber
;     
; For example, to use 8255 chip 1 on a PCI-DIO48H card for
; VideoSYNC, specify MODE=pci-dio48h,0,1
;
; Below is a table of some of the
; cards that may be used.  Other cards may be used as well.
; Contact Reflective Computing if your digital i/o card is
; not listed.  Use the PCITEST.EXE utility program to determine
; which PCI cards are installed on the VideoSYNC computer.
;
;   BUS Card                MODE (base address of 8255 chip)
;   --- ------------        -----
;   ISA CIO-DIO-24          0x300
;   ISA CIO-DAS-1602        0x700
;   ISA CIO-DAS08           0x308
;   PCI PCI-DIO48H          pci-dio48h,0,0      (1st chip)
;   PCI PCI-DIO48H          pci-dio48h,0,1      (2nd chip)
;   PCI PCI-DIO24           pci-dio24,0,0
;   PCI PCI-DIO48H          pci-dio24,0,0       (1st chip)
;   PCI PCI-DIO48H          pci-dio24,0,1       (2nd chip)
;   PCI PCI-DIO96H          pci-dio24,0,0       (1st chip)
;   PCI PCI-DIO96H          pci-dio24,0,1       (2nd chip)
;   PCI PCI-DIO96H          pci-dio24,0,2       (3rd chip)
;   PCI PCI-DIO96H          pci-dio24,0,3       (4th chip)
;   PCI PCI-DIO24H/CTR3     pci-dio24h/ctr3,0,0
;   PCI PCI-DIO48H/CTR15    pci-dio48h/ctr3,0,0 (1st chip) 
;   PCI PCI-DIO48H/CTR15    pci-dio48h/ctr3,0,1 (2nd chip) 
;
; HELPFUL HINT.
; You can submit a text file containing VideoSYNC commands by
; setting MODE= to the name of the file.  For testing your VideoSYNC
; commands, this feature can be very helpful.
; For example, if SOUNDS.WPL contains VideoSYNC commands, MODE=sounds.wpl.
; In this case, VideoSYNC will retrieve its commands from the SOUNDS.WPL
; file and not from a digital i/o board.  The MODE parameter, like all
; parameters, can also be specified on the VideoSYNC command line:
; VDOSYNC VS.CFG MODE=sounds.wpl.  When specified like this, all paramters
; in VS.CFG apply except the MODE parameter on the command line overrides
; the MODE paramter in VS.CFG.
    
MODE=PCI-DIO48H,0,1

;--------------------------------------------------------------------------
;The VESAMODE parameter controls the order in which VideoSYNC/Wordplay
;determine what interface to use to access the video controller.  The
;default is VESAMODE=NO (which is the same as omitting the VESAMODE
;parameter).  When VESAMODE=NO, VideoSYNC/Wordplay first check to see if
;they recognize the video chip set on the video card.  If the chip set is
;supported, custom instructions are used to access the chips directly.
;
;If the chip set is not recognized, VideoSYNC/Wordplay check to see if
;there is a VESA BIOS available and will use that to access the video
;card.
;
;If VideoSYNC/Wordplay do not recognize the chipset and VESA BIOS is not
;available, only a limited number of video modes may be available and you
;will have to try a different video card to use the SVGA video modes.
;
;When VESAMODE=YES, VideoSYNC/Wordplay check for a VESA BIOS first
;(instead of checking for the chipset first).  If the VESA BIOS is not
;available, the chip set is then checked.  Essentially, VESAMODE=YES
;forces VideoSYNC/Wordplay to use the VESA BIOS properties which may be
;different from the chipset properties.

VESAMODE=NO

;--------------------------------------------------------------------------
; Due to the lack of a standard video card interface, VideoSYNC may not
; correctly determine the amount of video memory available on your video
; card.  You can see the amount of video memory VideoSYNC detects in the
; VDOSYNC -V display.  If this amount is not correct, you can use the
; VIDEOMEMORY parameter to set the correct amount.  The VIDEOMEMORY
; parameter sets the number of megabytes (Mb) available to VideoSYNC.
; If your video card does not have as much video memory as specified
; by the VIDEOMEMORY parameter, VideoSYNC may not run correctly.
; Omitting (or prefixing with a semicolon) the VIDEOMEMORY parameter
; causes VideoSYNC to automatically determine the amount of video memory.
; The default is to comment out the VIDEOMEMORY parameter.

;VIDEOMEMORY=8

;--------------------------------------------------------------------------
; Video Resolution.  This defines the dimensions of the screen (in pixels) and
; the color resolution.  Type VDOSYNC -v to see a list of modes supported
; by VideoSYNC.  Note that this is the default screen resolution when
; when VideoSYNC is initially run.  Your protocol can reset the video
; mode with the VI command at any time.

video=18

;--------------------------------------------------------------------------
; This is the maximum number of VideoSYNC sprites you plan to use.  Avoid
; setting this number too large as each sprite consumes CPU time.
; If you are not using sprites, set SPRITES=0.

sprites=2

;--------------------------------------------------------------------------
; This is the number of sound files (.VOC) you plan to load at one time.
; If you are not using sound files, you do not need to set this parameter

sounds=10

;--------------------------------------------------------------------------
; This is the number of image files (.PCX) you plan to load at one time.
; If you are not loading images, you do not need to set this parameter.
; If not specified, the default value for IMAGETABLE is 32.
;
; Since each image consumes one EMM handle, you must make sure you
; have enough emm handles allocated in your C:\CONFIG.SYS file.
; EMM386.SYS and QEMM.EXE default to 64 handles some of which are used
; by other programs.  The maximum for EMM386 is H=255.  To increase the
; number of EMM handles in EMM386 to, say, 120 handles, add the
; parameter H=120 to the EMM386.EXE line in your C:\CONFIG.SYS file:
; 
;           device=c:\windows\emm386.exe ram h=120
 
imagetable=20

;--------------------------------------------------------------------------
; Bitmaps are used to define MOUSE cursors.  If you are not using mouse
; cursors, you do not need to define these maps.
;
; Bitmap for Cross large bar cursor
;cursorf1=0180,0180,0180,0180,0180,0180,0180,ffff,ffff,0180,0180,0180,0180,0180,0180,0180
;cursorb1=ffff,8001,8001,8001,8001,8001,8001,8001,8001,8001,8001,8001,8001,8001,8001,ffff
;
;; Bitmap for Large solid box cursor
;cursorf2=7ffE,7ffE,7ffE,7ffE,7ffE,7ffE,7ffE,7ffE,7ffE,7ffE,7ffE,7ffE,7ffE,7ffE,7ffE,7ffE
;cursorb2=ffff,8001,8001,8001,8001,8001,8001,8001,8001,8001,8001,8001,8001,8001,8001,ffff
;
;; Bitmap for Small solid box cursor
;cursorf3=0000,0000,0000,0000,0ff0,0ff0,0ff0,0ff0,0ff0,0ff0,0ff0,0ff0,0000,0000,0000,0000
;cursorb3=0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000
;
;--------------------------------------------------------------------------
; These parameters define default settings for displaying large characters.
; If you are not using the large character commands, you do not need to
; set these parameters.
; FONTn defines font files used by the WD command
; WORDn defines word list files used by the WD command
; BOX defines the size of a "pixel" when drawing large fonts
; FCOLOR defines the default foreground and background colors for large fonts.
;
;font0=ascii.fon
;word0=wordlist.wrd
;box=18,16
;fcolor=14,3
